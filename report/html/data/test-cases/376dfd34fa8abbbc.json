{
  "uid" : "376dfd34fa8abbbc",
  "name" : "test_002",
  "fullName" : "scripts.test_a.Test_a#test_002",
  "historyId" : "17b29d9854fd76bed5b9642369458614",
  "time" : {
    "start" : 1560322379302,
    "stop" : 1560322379303,
    "duration" : 1
  },
  "status" : "broken",
  "statusMessage" : "_pytest.warning_types.RemovedInPytest4Warning: MarkInfo objects are deprecated as they contain merged marks which are hard to deal with correctly.\nPlease use node.get_closest_marker(name) or node.iter_markers(name).\nDocs: https://docs.pytest.org/en/latest/mark.html#updating-code",
  "statusTrace" : "self = <allure_pytest.listener.AllureListener object at 0x0328FBD0>, item = <Function 'test_002'>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_teardown(self, item):\n        yield\n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n>       test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\n\ne:\\python36\\lib\\site-packages\\allure_pytest\\listener.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ne:\\python36\\lib\\site-packages\\allure_pytest\\listener.py:101: in <listcomp>\n    test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\ne:\\python36\\lib\\site-packages\\allure_pytest\\utils.py:44: in allure_labels\n    label_type = marker.kwargs['label_type']\ne:\\python36\\lib\\site-packages\\allure_pytest\\listener.py:101: in pytest_runtest_teardown\n    test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\ne:\\python36\\lib\\site-packages\\allure_pytest\\listener.py:101: in <listcomp>\n    test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nitem = <Function 'test_001'>\n\n    def allure_labels(item):\n        for keyword in item.keywords.keys():\n            if keyword.startswith(ALLURE_LABEL_PREFIX):\n                marker = item.get_marker(keyword)\n>               label_type = marker.kwargs['label_type']\nE               _pytest.warning_types.RemovedInPytest4Warning: MarkInfo objects are deprecated as they contain merged marks which are hard to deal with correctly.\nE               Please use node.get_closest_marker(name) or node.iter_markers(name).\nE               Docs: https://docs.pytest.org/en/latest/mark.html#updating-code\n\ne:\\python36\\lib\\site-packages\\allure_pytest\\utils.py:44: RemovedInPytest4Warning",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "_pytest.warning_types.RemovedInPytest4Warning: MarkInfo objects are deprecated as they contain merged marks which are hard to deal with correctly.\nPlease use node.get_closest_marker(name) or node.iter_markers(name).\nDocs: https://docs.pytest.org/en/latest/mark.html#updating-code",
    "statusTrace" : "self = <allure_pytest.listener.AllureListener object at 0x0328FBD0>, item = <Function 'test_002'>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_teardown(self, item):\n        yield\n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n>       test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\n\ne:\\python36\\lib\\site-packages\\allure_pytest\\listener.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ne:\\python36\\lib\\site-packages\\allure_pytest\\listener.py:101: in <listcomp>\n    test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\ne:\\python36\\lib\\site-packages\\allure_pytest\\utils.py:44: in allure_labels\n    label_type = marker.kwargs['label_type']\ne:\\python36\\lib\\site-packages\\allure_pytest\\listener.py:101: in pytest_runtest_teardown\n    test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\ne:\\python36\\lib\\site-packages\\allure_pytest\\listener.py:101: in <listcomp>\n    test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nitem = <Function 'test_001'>\n\n    def allure_labels(item):\n        for keyword in item.keywords.keys():\n            if keyword.startswith(ALLURE_LABEL_PREFIX):\n                marker = item.get_marker(keyword)\n>               label_type = marker.kwargs['label_type']\nE               _pytest.warning_types.RemovedInPytest4Warning: MarkInfo objects are deprecated as they contain merged marks which are hard to deal with correctly.\nE               Please use node.get_closest_marker(name) or node.iter_markers(name).\nE               Docs: https://docs.pytest.org/en/latest/mark.html#updating-code\n\ne:\\python36\\lib\\site-packages\\allure_pytest\\utils.py:44: RemovedInPytest4Warning",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "955a0200f4273fdf",
      "name" : "试一下",
      "source" : "955a0200f4273fdf.attach",
      "type" : "text/plain",
      "size" : 18
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "376dfd34fa8abbbc.json",
  "parameterValues" : [ ]
}